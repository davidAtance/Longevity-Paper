##################################################################################################################################
##################################################################################################################################
#He guardado todos los datos en un archivo de R. 
#que se obtiene mediante la siguiente funcion 

load(file = "Indicadores_HMD.RData")
load(file = "Indicadores_LHMD.RData")
load(file = "Indicadores_NU.RData")
load(file = "datosmuestra.RData")
load(file = "datos_LHMD.RData")
load(file = "datos_NU.RData")

poph_NU <- read.table("DPmale_NU.txt", header = TRUE)
popm_NU <- read.table("DPfemale_NU.txt", header = TRUE)


pobNU <- c("AFG", "ALG", "ANG", "BAN", "CHIN", "EGY", "ETH", "FIL", "GHA", "IND", "INDO", 
           "IRA", "IRAQ", "KEN", "MAL", "MOR", "MOZ", "MYA", "NIG", "PAK", "TAN", "CON", 
            "SAU", "SOU", "SUD", "THA", "TUR", "UGA", "UZB", "VIE", "PER")
pobLHMD <- c("ARG", "BRA", "COL", "COS", "CUB", "ECU", "ELS", "MEX", "URU", "VEN")#y luego en los sexos
pobHMD <- c("AUS", "AUT", "BEL", "BGR", "BLR", "CAN", "CHL", "HRV", "HKG", "CHE", 
            "CZE", "DEU", "DNK", "ESP", "EST", "FIN", "FRA", "GRC", "HUN", "IRL", 
            "ISL", "ISR", "ITA", "JPN", "KOR", "LTU", "LUX", "LVA", "NLD", "NOR",
            "NZL", "POL", "PRT", "RUS", "SVK", "SVN", "SWE", "TWN", "UKR", "GBR",
            "USA")

########################################################################
#CALCULO DEL TAMAÃ‘O POBLACIONAL PARA CADA PAIS
npopHMDB <- list()
for(i in 1:41){
  minyear <- min(paises[[i]]$hombres$Year)
  maxyear <- max(paises[[i]]$hombres$Year)
  years <- c(minyear:maxyear)
  nyears <- length(years)
  ages <- c(0:99)
  nages <- length(ages)
  npopHMDB[[paste0(pobHMD[i])]] <- matrix(NA, nyears, 2, dimnames = list(years, c("hombres", "mujeres")))
  for(h in 1:nyears){
    npopHMDB[[i]][h, 1] <- sum(matrix(paises[[i]]$hombres$Exp, nages, nyears)[,h]) 
    npopHMDB[[i]][h, 2] <- sum(matrix(paises[[i]]$mujeres$Exp, nages, nyears)[,h]) 
  }
}
npopLHMD <- list()
for(i in 1:10){
  minyear <- min(paisesLHMD[[i]]$hombres$Year)
  maxyear <- max(paisesLHMD[[i]]$hombres$Year)
  years <- c(minyear:maxyear)
  nyears <- length(years)
  ages <- c(1:19)
  nages <- length(ages)
  npopLHMD[[paste0(pobLHMD[i])]] <- matrix(NA, nyears, 2, dimnames = list(years, c("hombres", "mujeres")))
  for(h in 1:nyears){
    npopLHMD[[i]][h, 1] <- sum(matrix(paisesLHMD[[i]]$hombres$Exp, nages, nyears)[,h]) 
    npopLHMD[[i]][h, 2] <- sum(matrix(paisesLHMD[[i]]$mujeres$Exp, nages, nyears)[,h]) 
  }
}
#DATOS NACIONES UNIDAS
npopNU <- list()
for(i in 1:31){
  minyear <- min(paisesNU[[i]]$hombres$Year)
  maxyear <- max(paisesNU[[i]]$hombres$Year)
  years <- seq(minyear,maxyear, 5)
  nyears <- length(years)
  npopNU[[paste0(pobNU[i])]] <- matrix(NA, nyears, 2, dimnames = list(years, c("hombres", "mujeres")))
  for(h in 1:nyears){
    npopNU[[i]][h, 1] <- poph_NU[h, (i+1)] 
    npopNU[[i]][h, 2] <- popm_NU[h, (i+1)]
  }
}

datosh <- NULL
datosm <- NULL
##########################################################################################
############################### HUMAN MORTALIDAD DATA BASE ###############################
##################################HOMBRES#################################################
for(i in 1:41){
  #i <- 1
  minyear <- min(paises[[i]]$hombres$Year)
  maxyear <- max(paises[[i]]$hombres$Year)
  years <- c(minyear:maxyear)
  nyears <- length(years)
  for(j in 1: nyears){
    any <- rep(minyear + j - 1)
    datosht <- data.frame(pob = pobHMD[i], ano = any, pop = npopHMDB[[i]][j,1], 
                          ex0 = esperanzas_DM.HMD[[i]]$e0[j, 1], ex65 = esperanzas_DM.HMD[[i]]$e65[j, 1],
                          ex70 = esperanzas_DM.HMD[[i]]$e70[j, 1], ex75 = esperanzas_DM.HMD[[i]]$e75[j, 1],
                          EM = edad_modal_DM.HMD[[i]][j,1], GI0 = gini.index_DM.HMD[[i]][j,1], GI65 = gini.index_DM.HMD[[i]][j,4],
                          GI70 = gini.index_DM.HMD[[i]][j,7], GI75 = gini.index_DM.HMD[[i]][j,10],
                          p65 = pob.llegarvivo_DM.HMD[[i]][j,1], p70 = pob.llegarvivo_DM.HMD[[i]][j, 4], 
                          p75 = pob.llegarvivo_DM.HMD[[i]][j,7], SD0 = con.std.des_DM.HMD[[i]][j,1], 
                          SD65 = con.std.des_DM.HMD[[i]][j,4], SD70 = con.std.des_DM.HMD[[i]][j,7], 
                          SD75 = con.std.des_DM.HMD[[i]][j,10], EP0 = Eprep.vida_DM.HMD[[i]][j,1], 
                          EP65 = Eprep.vida_DM.HMD[[i]][j,4]) 
    datosmt <- data.frame(pob = pobHMD[i], ano = any, pop = npopHMDB[[i]][j,2],
                          ex0 = esperanzas_DM.HMD[[i]]$e0[j, 2], ex65 = esperanzas_DM.HMD[[i]]$e65[j, 2],
                          ex70 = esperanzas_DM.HMD[[i]]$e70[j, 2], ex75 = esperanzas_DM.HMD[[i]]$e75[j, 2],
                          EM = edad_modal_DM.HMD[[i]][j,2], GI0 = gini.index_DM.HMD[[i]][j,2], GI65 = gini.index_DM.HMD[[i]][j,5],
                          GI70 = gini.index_DM.HMD[[i]][j,8], GI75 = gini.index_DM.HMD[[i]][j,11],
                          p65 = pob.llegarvivo_DM.HMD[[i]][j,2], p70 = pob.llegarvivo_DM.HMD[[i]][j, 5], 
                          p75 = pob.llegarvivo_DM.HMD[[i]][j,8], SD0 = con.std.des_DM.HMD[[i]][j,2], 
                          SD65 = con.std.des_DM.HMD[[i]][j,5], SD70 = con.std.des_DM.HMD[[i]][j,8], 
                          SD75 = con.std.des_DM.HMD[[i]][j,11], EP0 = Eprep.vida_DM.HMD[[i]][j,2], 
                          EP65 = Eprep.vida_DM.HMD[[i]][j,5]) 
    
    datosh <- rbind(datosh, datosht)
    datosm <- rbind(datosm, datosmt)
  }
  years_fm <- c((maxyear+1):2030)
  nyears_fm <- length(years_fm)
  for(h in 1: nyears_fm){
    any <- rep(maxyear + h)
    datosht <- data.frame(pob = pobHMD[i], ano = any, pop = npopHMDB[[i]][nyears,1],
                          ex0 = esperanzas_FM.HMD[[i]][h,1], ex65 = esperanzas_FM.HMD[[i]][h,4],
                          ex70 = esperanzas_FM.HMD[[i]][h,7], ex75 = esperanzas_FM.HMD[[i]][h, 10],
                          EM = edad_modal_FM.HMD[[i]][h,1], GI0 = gini.index_FM.HMD[[i]][h,1], GI65 = gini.index_FM.HMD[[i]][h,4],
                          GI70 = gini.index_FM.HMD[[i]][h,7], GI75 = gini.index_FM.HMD[[i]][h,10],
                          p65 = pob.llegarvivo_FM.HMD[[i]][h,1], p70 = pob.llegarvivo_FM.HMD[[i]][h, 4], 
                          p75 = pob.llegarvivo_FM.HMD[[i]][h,7], SD0 = con.std.des_FM.HMD[[i]][h,1], 
                          SD65 = con.std.des_FM.HMD[[i]][h,4], SD70 = con.std.des_FM.HMD[[i]][h,7], 
                          SD75 = con.std.des_FM.HMD[[i]][h,10], EP0 = Eprep.vida_FM.HMD[[i]][h,1], 
                          EP65 = Eprep.vida_FM.HMD[[i]][h,4]) 
    datosmt <- data.frame(pob = pobHMD[i], ano = any, pop = npopHMDB[[i]][nyears,1],
                          ex0 = esperanzas_FM.HMD[[i]][h,2], ex65 = esperanzas_FM.HMD[[i]][h,5],
                          ex70 = esperanzas_FM.HMD[[i]][h,8], ex75 = esperanzas_FM.HMD[[i]][h, 11],
                          EM = edad_modal_FM.HMD[[i]][h,2], GI0 = gini.index_FM.HMD[[i]][h,2], GI65 = gini.index_FM.HMD[[i]][h,5],
                          GI70 = gini.index_FM.HMD[[i]][h,8], GI75 = gini.index_FM.HMD[[i]][h,11],
                          p65 = pob.llegarvivo_FM.HMD[[i]][h,2], p70 = pob.llegarvivo_FM.HMD[[i]][h, 5], 
                          p75 = pob.llegarvivo_FM.HMD[[i]][h,8], SD0 = con.std.des_FM.HMD[[i]][h,2], 
                          SD65 = con.std.des_FM.HMD[[i]][h,5], SD70 = con.std.des_FM.HMD[[i]][h,8], 
                          SD75 = con.std.des_FM.HMD[[i]][h,11], EP0 = Eprep.vida_FM.HMD[[i]][h,2], 
                          EP65 = Eprep.vida_FM.HMD[[i]][h,5]) 
    
    datosh <- rbind(datosh, datosht)
    datosm <- rbind(datosm, datosmt)
    
  }
}
##########################################################################################
############################### LATIN HUMAN MORTALIDAD DATA BASE #########################
##################################HOMBRES#################################################
for(i in 1:10){
  #i <- 1
  minyear <- min(paisesLHMD[[i]]$hombres$Year)
  maxyear <- max(paisesLHMD[[i]]$hombres$Year)
  years <- c(minyear:maxyear)
  nyears <- length(years)
  for(j in 1: nyears){
    any <- rep(minyear + j - 1)
    datosht <- data.frame(pob = pobLHMD[i], ano = any, pop = npopLHMD[[i]][j,1],
                          ex0 = esperanzas_DM.LHMD[[i]]$e0[j, 1], ex65 = esperanzas_DM.LHMD[[i]]$e65[j, 1],
                          ex70 = esperanzas_DM.LHMD[[i]]$e70[j, 1], ex75 = esperanzas_DM.LHMD[[i]]$e75[j, 1],
                          EM = edad_modal_DM.LHMD[[i]][j,1], GI0 = gini.index_DM.LHMD[[i]][j,1], GI65 = gini.index_DM.LHMD[[i]][j,4],
                          GI70 = gini.index_DM.LHMD[[i]][j,7], GI75 = gini.index_DM.LHMD[[i]][j,10],
                          p65 = pob.llegarvivo_DM.LHMD[[i]][j,1], p70 = pob.llegarvivo_DM.LHMD[[i]][j, 4], 
                          p75 = pob.llegarvivo_DM.LHMD[[i]][j,7], SD0 = con.std.des_DM.LHMD[[i]][j,1], 
                          SD65 = con.std.des_DM.LHMD[[i]][j,4], SD70 = con.std.des_DM.LHMD[[i]][j,7], 
                          SD75 = con.std.des_DM.LHMD[[i]][j,10], EP0 = Eprep.vida_DM.LHMD[[i]][j,1], 
                          EP65 = Eprep.vida_DM.LHMD[[i]][j,4]) 
    datosmt <- data.frame(pob = pobLHMD[i], ano = any, pop = npopLHMD[[i]][j,2],
                          ex0 = esperanzas_DM.LHMD[[i]]$e0[j, 2], ex65 = esperanzas_DM.LHMD[[i]]$e65[j, 2],
                          ex70 = esperanzas_DM.LHMD[[i]]$e70[j, 2], ex75 = esperanzas_DM.LHMD[[i]]$e75[j, 2],
                          EM = edad_modal_DM.LHMD[[i]][j,2], GI0 = gini.index_DM.LHMD[[i]][j,2], GI65 = gini.index_DM.LHMD[[i]][j,5],
                          GI70 = gini.index_DM.LHMD[[i]][j,8], GI75 = gini.index_DM.LHMD[[i]][j,11],
                          p65 = pob.llegarvivo_DM.LHMD[[i]][j,2], p70 = pob.llegarvivo_DM.LHMD[[i]][j, 5], 
                          p75 = pob.llegarvivo_DM.LHMD[[i]][j,8], SD0 = con.std.des_DM.LHMD[[i]][j,2], 
                          SD65 = con.std.des_DM.LHMD[[i]][j,5], SD70 = con.std.des_DM.LHMD[[i]][j,8], 
                          SD75 = con.std.des_DM.LHMD[[i]][j,11], EP0 = Eprep.vida_DM.LHMD[[i]][j,2], 
                          EP65 = Eprep.vida_DM.LHMD[[i]][j,5]) 
    
    datosh <- rbind(datosh, datosht)
    datosm <- rbind(datosm, datosmt)
  }
  years_fm <- c((maxyear+1):2030)
  nyears_fm <- length(years_fm)
  for(h in 1: nyears_fm){
    any <- rep(maxyear + h)
    datosht <- data.frame(pob = pobLHMD[i], ano = any, pop = npopLHMD[[i]][nyears,1],
                          ex0 = esperanzas_FM.LHMD[[i]][h,1], ex65 = esperanzas_FM.LHMD[[i]][h,4],
                          ex70 = esperanzas_FM.LHMD[[i]][h,7], ex75 = esperanzas_FM.LHMD[[i]][h, 10],
                          EM = edad_modal_FM.LHMD[[i]][h,1], GI0 = gini.index_FM.LHMD[[i]][h,1], GI65 = gini.index_FM.LHMD[[i]][h,4],
                          GI70 = gini.index_FM.LHMD[[i]][h,7], GI75 = gini.index_FM.LHMD[[i]][h,10],
                          p65 = pob.llegarvivo_FM.LHMD[[i]][h,1], p70 = pob.llegarvivo_FM.LHMD[[i]][h, 4], 
                          p75 = pob.llegarvivo_FM.LHMD[[i]][h,7], SD0 = con.std.des_FM.LHMD[[i]][h,1], 
                          SD65 = con.std.des_FM.LHMD[[i]][h,4], SD70 = con.std.des_FM.LHMD[[i]][h,7], 
                          SD75 = con.std.des_FM.LHMD[[i]][h,10], EP0 = Eprep.vida_FM.LHMD[[i]][h,1], 
                          EP65 = Eprep.vida_FM.LHMD[[i]][h,4]) 
    datosmt <- data.frame(pob = pobLHMD[i], ano = any, pop = npopLHMD[[i]][nyears,2],
                          ex0 = esperanzas_FM.LHMD[[i]][h,2], ex65 = esperanzas_FM.LHMD[[i]][h,5],
                          ex70 = esperanzas_FM.LHMD[[i]][h,8], ex75 = esperanzas_FM.LHMD[[i]][h, 11],
                          EM = edad_modal_FM.LHMD[[i]][h,2], GI0 = gini.index_FM.LHMD[[i]][h,2], GI65 = gini.index_FM.LHMD[[i]][h,5],
                          GI70 = gini.index_FM.LHMD[[i]][h,8], GI75 = gini.index_FM.LHMD[[i]][h,11],
                          p65 = pob.llegarvivo_FM.LHMD[[i]][h,2], p70 = pob.llegarvivo_FM.LHMD[[i]][h, 5], 
                          p75 = pob.llegarvivo_FM.LHMD[[i]][h,8], SD0 = con.std.des_FM.LHMD[[i]][h,2], 
                          SD65 = con.std.des_FM.LHMD[[i]][h,5], SD70 = con.std.des_FM.LHMD[[i]][h,8], 
                          SD75 = con.std.des_FM.LHMD[[i]][h,11], EP0 = Eprep.vida_FM.LHMD[[i]][h,2], 
                          EP65 = Eprep.vida_FM.LHMD[[i]][h,5]) 
    
    datosh <- rbind(datosh, datosht)
    datosm <- rbind(datosm, datosmt)
    
  }
}

##########################################################################################
############################### NACIONES UNIDAS ##########################################
##################################HOMBRES#################################################
for(i in 1:31){
  #i <- 1
  minyear <- min(paisesNU[[i]]$hombres$Year)
  maxyear <- max(paisesNU[[i]]$hombres$Year)
  years <- seq(minyear,maxyear, 5)
  nyears <- length(years)
  for(j in 1: nyears){
    any <- years[j]
    datosht <- data.frame(pob = pobNU[i], ano = any, pop = npopNU[[i]][j,1], 
                          ex0 = esperanzas_DM.NU[[i]]$e0[j, 1], ex65 = esperanzas_DM.NU[[i]]$e65[j, 1],
                          ex70 = esperanzas_DM.NU[[i]]$e70[j, 1], ex75 = esperanzas_DM.NU[[i]]$e75[j, 1],
                          EM = edad_modal_DM.NU[[i]][j,1], GI0 = gini.index_DM.NU[[i]][j,1], GI65 = gini.index_DM.NU[[i]][j,3],
                          GI70 = gini.index_DM.NU[[i]][j,5], GI75 = gini.index_DM.NU[[i]][j,7],
                          p65 = pob.llegarvivo_DM.NU[[i]][j,1], p70 = pob.llegarvivo_DM.NU[[i]][j, 3], 
                          p75 = pob.llegarvivo_DM.NU[[i]][j,5], SD0 = con.std.des_DM.NU[[i]][j,1], 
                          SD65 = con.std.des_DM.NU[[i]][j,3], SD70 = con.std.des_DM.NU[[i]][j,5], 
                          SD75 = con.std.des_DM.NU[[i]][j,7], EP0 = Eprep.vida_DM.NU[[i]][j,1], 
                          EP65 = Eprep.vida_DM.NU[[i]][j,3]) 
    datosmt <- data.frame(pob = pobNU[i], ano = any, pop = npopNU[[i]][j,1],
                          ex0 = esperanzas_DM.NU[[i]]$e0[j, 2], ex65 = esperanzas_DM.NU[[i]]$e65[j, 2],
                          ex70 = esperanzas_DM.NU[[i]]$e70[j, 2], ex75 = esperanzas_DM.NU[[i]]$e75[j, 2],
                          EM = edad_modal_DM.NU[[i]][j,2], GI0 = gini.index_DM.NU[[i]][j,2], GI65 = gini.index_DM.NU[[i]][j,4],
                          GI70 = gini.index_DM.NU[[i]][j,6], GI75 = gini.index_DM.NU[[i]][j,8],
                          p65 = pob.llegarvivo_DM.NU[[i]][j,2], p70 = pob.llegarvivo_DM.NU[[i]][j, 4], 
                          p75 = pob.llegarvivo_DM.NU[[i]][j,6], SD0 = con.std.des_DM.NU[[i]][j,2], 
                          SD65 = con.std.des_DM.NU[[i]][j,4], SD70 = con.std.des_DM.NU[[i]][j,6], 
                          SD75 = con.std.des_DM.NU[[i]][j,8], EP0 = Eprep.vida_DM.NU[[i]][j,2], 
                          EP65 = Eprep.vida_DM.NU[[i]][j,4]) 
    
    datosh <- rbind(datosh, datosht)
    datosm <- rbind(datosm, datosmt)
  }
  years_fm <- c(2020, 2025, 2030)
  nyears_fm <- length(years_fm)
  for(h in 1: nyears_fm){
    any <- years_fm[h]
    datosht <- data.frame(pob = pobNU[i], ano = any, pop = npopNU[[i]][nyears,1],
                          ex0 = esperanzas_FM.NU[[i]][h,1], ex65 = esperanzas_FM.NU[[i]][h,3],
                          ex70 = esperanzas_FM.NU[[i]][h,5], ex75 = esperanzas_FM.NU[[i]][h, 7],
                          EM = edad_modal_FM.NU[[i]][h,1], GI0 = gini.index_FM.NU[[i]][h,1], GI65 = gini.index_FM.NU[[i]][h,3],
                          GI70 = gini.index_FM.NU[[i]][h,5], GI75 = gini.index_FM.NU[[i]][h,7],
                          p65 = pob.llegarvivo_FM.NU[[i]][h,1], p70 = pob.llegarvivo_FM.NU[[i]][h, 3], 
                          p75 = pob.llegarvivo_FM.NU[[i]][h,5], SD0 = con.std.des_FM.NU[[i]][h,1], 
                          SD65 = con.std.des_FM.NU[[i]][h,3], SD70 = con.std.des_FM.NU[[i]][h,5], 
                          SD75 = con.std.des_FM.NU[[i]][h,7], EP0 = Eprep.vida_FM.NU[[i]][h,1], 
                          EP65 = Eprep.vida_FM.NU[[i]][h,3]) 
    datosmt <- data.frame(pob = pobNU[i], ano = any, pop = npopNU[[i]][nyears,1],
                          ex0 = esperanzas_FM.NU[[i]][h,2], ex65 = esperanzas_FM.NU[[i]][h,4],
                          ex70 = esperanzas_FM.NU[[i]][h,6], ex75 = esperanzas_FM.NU[[i]][h, 8],
                          EM = edad_modal_FM.NU[[i]][h,2], GI0 = gini.index_FM.NU[[i]][h,2], GI65 = gini.index_FM.NU[[i]][h,4],
                          GI70 = gini.index_FM.NU[[i]][h,6], GI75 = gini.index_FM.NU[[i]][h,8],
                          p65 = pob.llegarvivo_FM.NU[[i]][h,2], p70 = pob.llegarvivo_FM.NU[[i]][h, 4], 
                          p75 = pob.llegarvivo_FM.NU[[i]][h,6], SD0 = con.std.des_FM.NU[[i]][h,2], 
                          SD65 = con.std.des_FM.NU[[i]][h,4], SD70 = con.std.des_FM.NU[[i]][h,6], 
                          SD75 = con.std.des_FM.NU[[i]][h,8], EP0 = Eprep.vida_FM.NU[[i]][h,2], 
                          EP65 = Eprep.vida_FM.NU[[i]][h,4]) 
    
    datosh <- rbind(datosh, datosht)
    datosm <- rbind(datosm, datosmt)
    
  }
}
#Ya tengo creados todos los datos 
library(gganimate)
library(gifski)
library(ggplot2)
library(dplyr)
library(gapminder)
library(ggthemes)

graph1 <- ggplot(data = datosh, aes(x = EP0, y = ex0, color = pob, size = pop)) + 
  geom_point() + 
  theme(legend.position = "none")
graph1

graph1 <- datosh %>%
  ggplot(aes(x = EP0, y = ex0, color = pob, size = pop)) + 
  geom_point(alpha = 0.7, stroke = 0) +
  scale_size(range = c(2,12), guide = "none") + 
  labs(title = "Ex0 vs EP0 por paÃ­s en la poblaciÃ³n masculina",
       y = "Esperanza de vida al nacer", 
       x = "Edad PreparaciÃ³n vida 0, p=0.5",
       color = "PaÃ­ses") + 
  theme(legend.position = "none") + 
scale_color_brewer(palette = "Set2")

graph1

graph1.animation <- graph1 + 
  transition_time(ano) +
  labs(subtitle = "Year: {frame_time}") +
  shadow_wake(wake_length = 0.1, alpha= FALSE)

library(gifski)
animate(graph1, renderer = gifski_renderer())

graph1.animation

animate(graph1.animation, height = 500, width = 800, fps = 100, duration = 10, 
        end_pause = 60, res = 100)


###################################################################
###################################################################
###################################################################
#Preparacion de los datos 
hombres1990 <- datosh[datosh$ano == 1990, ]
mujeres1990 <- datosm[datosm$ano == 1990, ]

#Paises que no tienen 1990 hombres
chlh1992 <- datosh[datosh$ano == 1992,]
chlh1992 <- chlh1992[chlh1992$pob == "CHL",]
hrvh1992 <- datosh[datosh$ano == 2001,]
hrvh1992 <- hrvh1992[hrvh1992$pob == "HRV",]
korh1992 <- datosh[datosh$ano == 2003,]
korh1992 <- korh1992[korh1992$pob == "KOR",]
argh1992 <- datosh[datosh$ano == 1991,]
argh1992 <- argh1992[argh1992$pob == "ARG",]
brah1992 <- datosh[datosh$ano == 1991,]
brah1992 <- brah1992[brah1992$pob == "BRA",]
uruh1992 <- datosh[datosh$ano == 1996,]
uruh1992 <- uruh1992[uruh1992$pob == "URU",]

#Paises que no tienen 1990 mujeres
chlm1992 <- datosm[datosm$ano == 1992,]
chlm1992 <- chlm1992[chlm1992$pob == "CHL",]
hrvm1992 <- datosm[datosm$ano == 2001,]
hrvm1992 <- hrvm1992[hrvm1992$pob == "HRV",]
korm1992 <- datosm[datosm$ano == 2003,]
korm1992 <- korm1992[korm1992$pob == "KOR",]
argm1992 <- datosm[datosm$ano == 1991,]
argm1992 <- argm1992[argm1992$pob == "ARG",]
bram1992 <- datosm[datosm$ano == 1991,]
bram1992 <- bram1992[bram1992$pob == "BRA",]
urum1992 <- datosm[datosm$ano == 1996,]
urum1992 <- urum1992[urum1992$pob == "URU",]

library(dplyr)
hombres1990 <- rbind(hombres1990, chlh1992, hrvh1992, korh1992, 
                     argh1992, brah1992, uruh1992)
hombres1990 <- cbind(row.names = hombres1990$pob, hombres1990)
hombres1990 <- data.frame(hombres1990)
hombres1990$pob <- NULL
hombres1990$ano <- NULL
hombres1990$pop <- NULL
head(hombres1990)

#Mujeres
mujeres1990 <- rbind(mujeres1990, chlm1992, hrvm1992, korm1992, 
                     argm1992, bram1992, urum1992)
mujeres1990 <- cbind(row.names = mujeres1990$pob, mujeres1990)
mujeres1990$pob <- NULL
mujeres1990$ano <- NULL
mujeres1990$pop <- NULL
head(mujeres1990)

#Datos de 2010 y Datos de 2030
hombres2010 <- datosh[datosh$ano == 2010, ]
mujeres2010 <- datosm[datosm$ano == 2010, ]
hombres2030 <- datosh[datosh$ano == 2030, ]
mujeres2030 <- datosm[datosm$ano == 2030, ]

#Datos2010
#hombres
hombres2010 <- cbind(row.names = hombres2010$pob, hombres2010)
hombres2010$pob <- NULL
hombres2010$ano <- NULL
hombres2010$pop <- NULL
head(hombres2010)

#Mujeres
mujeres2010 <- cbind(row.names = mujeres2010$pob, mujeres2010)
mujeres2010$pob <- NULL
mujeres2010$ano <- NULL
mujeres2010$pop <- NULL
head(mujeres2010)

#Datos2030
#hombres
hombres2030 <- cbind(row.names = hombres2030$pob, hombres2030)
hombres2030$pob <- NULL
hombres2030$ano <- NULL
hombres2030$pop <- NULL
head(hombres2030)

#Mujeres
mujeres2030 <- cbind(row.names = mujeres2030$pob, mujeres2030)
mujeres2030$pob <- NULL
mujeres2030$ano <- NULL
mujeres2030$pop <- NULL
head(mujeres2030)

length(hombres2010$ex0)
length(hombres2030$ex0)

indica <- c("ex0", "ex65", "ex70", "ex75", "EM", "GI0", "GI65", "GI70", "GI75",
            "p65", "p70", "p75", "SD0", "SD65", "SD70", "SD75", "EP0", "EP65")
mean_SD <- list(mean = list("1990" = matrix(NA, 18, 2, dimnames = list(indica, c("hombres", "mujeres"))),
                            "2010" = matrix(NA, 18, 2, dimnames = list(indica, c("hombres", "mujeres"))),
                            "2030" = matrix(NA, 18, 2, dimnames = list(indica, c("hombres", "mujeres")))),
                sd = list("1990" = matrix(NA, 18, 2, dimnames = list(indica, c("hombres", "mujeres"))),
                          "2010" = matrix(NA, 18, 2, dimnames = list(indica, c("hombres", "mujeres"))),
                          "2030" = matrix(NA, 18, 2, dimnames = list(indica, c("hombres", "mujeres")))))

mean_SD$mean$`1990`[,1] <- colMeans(hombres1990)
mean_SD$mean$`1990`[,2] <- colMeans(mujeres1990)
mean_SD$mean$`2010`[,1] <- colMeans(hombres2010)
mean_SD$mean$`2010`[,2] <- colMeans(mujeres2010)
mean_SD$mean$`2030`[,1] <- colMeans(hombres2030)
mean_SD$mean$`2030`[,2] <- colMeans(mujeres2030)

mean_SD$sd$`1990`[,1] <- apply(hombres1990, 2, sd)
mean_SD$sd$`1990`[,2] <- apply(mujeres1990, 2, sd)
mean_SD$sd$`2010`[,1] <- apply(hombres2010, 2, sd)
mean_SD$sd$`2010`[,2] <- apply(mujeres2010, 2, sd)
mean_SD$sd$`2030`[,1] <- apply(hombres2030, 2, sd)
mean_SD$sd$`2030`[,2] <- apply(mujeres2030, 2, sd)

#A la hora de escalar recordar que (x- mean)/sd

#Vamos a escalar los valores para que esten en la misma medida
shombres1990 <- scale(hombres1990)
shombres2010 <- scale(hombres2010)
shombres2030 <- scale(hombres2030)

smujeres1990 <- scale(mujeres1990)
smujeres2010 <- scale(mujeres2010)
smujeres2030 <- scale(mujeres2030)

##CLUSTERS 

library(cluster)
library(factoextra)
library(rnaturalearth)        
library(rnaturalearthdata)        
library(ggplot2)
library(viridis)
library(NbClust)

k_colores = c("#1B9E77", "#D95F02", "#7570B3", "#E7298A", "#F5C710", "#86868699")

##################################################################
#HOMBRES 1990 
##################################################################
set.seed(12345)
#MÃ©todo Average silhouette method --- nÃºmero de clusters optimo
png("Num.Clus.hombres1990.png")
fviz_nbclust(x = shombres1990, FUNcluster = kmeans, method = "silhouette", k.max = 15) +
  labs(title = "") + 
  xlab("NÃºmero de clusters") +
  ylab("")
dev.off()
ncluster1990h <- NbClust(data = shombres1990, distance = "euclidean", min.nc = 2,
                         max.nc = 10, method = "kmeans", index = "alllong")

#HIERARCHICAL K-MEANS CLUSTERING
cluster1990h <- hkmeans(x = shombres1990, hc.metric = "euclidean",
                           hc.method = "average", k = 5)
png("Dendograma1.hombres1990.png")
fviz_dend(x = cluster1990h, cex = 0.4, main = "Linkage Average",
          sub = "Distancia euclÃ­dea", horiz = TRUE, k_colors = "black") +
  theme(plot.title =  element_text(hjust = 0.5, size = 15)) + 
  geom_hline(yintercept = 4.2, linetype = "dashed") 
dev.off()
png("Dendograma2.hombres1990.png")
fviz_dend(x = cluster1990h, k = 5, cex = 0.4, main = "Linkage Average",
          sub = "Distancia euclÃ­dea", k_colors = "black") +
  theme(plot.title =  element_text(hjust = 0.5, size = 15)) + 
  geom_hline(yintercept = 4.2, linetype = "dashed") 
dev.off()

#Nos dice el centro de cada cluster
center <- as.data.frame(cluster1990h$centers)

centro_cluster1990h <- data.frame(row.names = c(1:5))
for(j in 1:18){
  prueba <- data.frame(row.names = c(1:5), 
                       j = cluster1990h$centers[,j]*mean_SD$sd$`1990`[j,1]+mean_SD$mean$`1990`[j,1]) 
  centro_cluster1990h <- cbind(centro_cluster1990h, prueba)
}
names(centro_cluster1990h) <- indica
centro_cluster1990h

#Visualizar rÃ¡pidamente el centro de cada cluster 
data.frame(t(centro_cluster1990h))

#Ahora vamos a obtener el mÃ­nimo y el mÃ¡ximo de cada cluster 
val.cluster1990h <- data.frame(shombres1990, cluster = cluster1990h$cluster)
min_cluster <- max_cluster <- NULL
for(cl in 1:5){
  minimo <- apply(val.cluster1990h[val.cluster1990h$cluster == cl,], 2, min) *
    c(mean_SD$sd$`1990`[,1], 1) + c(mean_SD$mean$`1990`[,1], 0)
  min_cluster <- rbind(minimo, min_cluster)
  
  maximo <- apply(val.cluster1990h[val.cluster1990h$cluster == cl,], 2, max) *
    c(mean_SD$sd$`1990`[,1], 1) + c(mean_SD$mean$`1990`[,1], 0)
  max_cluster <- rbind(maximo, max_cluster)
}

min_cluster <- data.frame(row.names = c(5:1), min_cluster)
max_cluster <- data.frame(row.names = c(5:1), max_cluster)

data.frame(t(min_cluster))
data.frame(t(max_cluster))

#Ahora por Ãºltimo vamos a calcular cuÃ¡l es el paÃ­s mÃ¡s cercano al centro del cluster
pais_centro <- NULL
for(cl in 1:5){
  ncluster <- length(val.cluster1990h[val.cluster1990h$cluster == cl,][,1]) 
  trey <- NULL
  for(j in 1:ncluster){
  rey <- abs(val.cluster1990h[val.cluster1990h$cluster == cl,][j,] - c(cluster1990h$centers[cl,],0))
  trey <- rbind(trey, rey)
  minimos <- apply(trey, 1, sum)
  cluj <- names(which(minimos == min(minimos), arr.ind=TRUE))
  }
  pais_centro <- c(pais_centro, cluj)
}

##################################################################
#HOMBRES 2010 
##################################################################
#MÃ©todo Average silhouette method --- nÃºmero de clusters optimo
set.seed(12345)
png("Num.Clus.hombres2010.png")
fviz_nbclust(x = shombres2010, FUNcluster = kmeans, method = "silhouette", k.max = 15) +
  labs(title = "") + 
  xlab("NÃºmero de clusters") +
  ylab("")
dev.off()
ncluster2010h <- NbClust(data = shombres2010, distance = "euclidean", min.nc = 2,
                         max.nc = 10, method = "kmeans", index = "alllong")

#HIERARCHICAL K-MEANS CLUSTERING
cluster2010h <- hkmeans(x = shombres2010, hc.metric = "euclidean",
                        hc.method = "average", k = 5)
png("Dendograma1.hombres2010.png")
fviz_dend(x = cluster2010h, k = 5, cex = 0.5, main = "Linkage Average",
          sub = "Distancia euclÃ­dea", horiz = TRUE, k_colors = "black") +
  theme(plot.title =  element_text(hjust = 0.5, size = 15)) + 
  geom_hline(yintercept = 4.5, linetype = "dashed") 
dev.off()
png("Dendograma2.hombres2010.png")
fviz_dend(x = cluster2010h, k = 5, cex = 0.5, main = "Linkage Average",
          sub = "Distancia euclÃ­dea", k_color = "black") +
  theme(plot.title =  element_text(hjust = 0.5, size = 15)) + 
  geom_hline(yintercept = 4.55, linetype = "dashed") 
dev.off()

#Nos dice el centro de cada cluster
center <- as.data.frame(cluster2010h$centers)

centro_cluster2010h <- data.frame(row.names = c(1:5))
for(j in 1:18){
  prueba <- data.frame(row.names = c(1:5), 
                       j = cluster2010h$centers[,j]*mean_SD$sd$`2010`[j,1]+mean_SD$mean$`2010`[j,1]) 
  centro_cluster2010h <- cbind(centro_cluster2010h, prueba)
}
names(centro_cluster2010h) <- indica
centro_cluster2010h

#Visualizar rÃ¡pidamente el centro de cada cluster 
data.frame(t(centro_cluster2010h))

#Ahora vamos a obtener el mÃ­nimo y el mÃ¡ximo de cada cluster 
val.cluster2010h <- data.frame(shombres2010, cluster = cluster2010h$cluster)
min_cluster <- max_cluster <- NULL
for(cl in 1:5){
  minimo <- apply(val.cluster2010h[val.cluster2010h$cluster == cl,], 2, min) *
    c(mean_SD$sd$`2010`[,1], 1) + c(mean_SD$mean$`2010`[,1], 0)
  min_cluster <- rbind(minimo, min_cluster)
  
  maximo <- apply(val.cluster2010h[val.cluster2010h$cluster == cl,], 2, max) *
    c(mean_SD$sd$`2010`[,1], 1) + c(mean_SD$mean$`2010`[,1], 0)
  max_cluster <- rbind(maximo, max_cluster)
}

min_cluster <- data.frame(row.names = c(5:1), min_cluster)
max_cluster <- data.frame(row.names = c(5:1), max_cluster)

data.frame(t(min_cluster))
data.frame(t(max_cluster))

#Ahora por Ãºltimo vamos a calcular cuÃ¡l es el paÃ­s mÃ¡s cercano al centro del cluster
pais_centro <- NULL
for(cl in 1:5){
  ncluster <- length(val.cluster2010h[val.cluster2010h$cluster == cl,][,1]) 
  trey <- NULL
  for(j in 1:ncluster){
    rey <- abs(val.cluster2010h[val.cluster2010h$cluster == cl,][j,] - c(cluster2010h$centers[cl,],0))
    trey <- rbind(trey, rey)
    minimos <- apply(trey, 1, sum)
    cluj <- names(which(minimos == min(minimos), arr.ind=TRUE))
  }
  pais_centro <- c(pais_centro, cluj)
}

##################################################################
#HOMBRES 2030 
##################################################################
#MÃ©todo Average silhouette method --- nÃºmero de clusters optimo
png("Num.Clus.hombres2030.png")
fviz_nbclust(x = shombres2030, FUNcluster = kmeans, method = "silhouette", k.max = 15) +
  labs(title = "") + 
  xlab("NÃºmero de clusters") +
  ylab("")
dev.off()
ncluster2030h <- NbClust(data = shombres2030, distance = "euclidean", min.nc = 2,
                         max.nc = 10, method = "kmeans", index = "alllong")

#HIERARCHICAL K-MEANS CLUSTERING
cluster2030h <- hkmeans(x = shombres2030, hc.metric = "euclidean",
                        hc.method = "average", k = 5)
png("Dendograma1.hombres2030.png")
fviz_dend(x = cluster2030h, k = 5, cex = 0.5, main = "Linkage Average",
          sub = "Distancia euclÃ­dea", horiz = TRUE, k_color = "black") +
  theme(plot.title =  element_text(hjust = 0.5, size = 15)) + 
  geom_hline(yintercept = 4.85, linetype = "dashed") 
dev.off()
png("Dendograma2.hombres2030.png")
fviz_dend(x = cluster2030h, k = 5, cex = 0.5, main = "Linkage Average",
          sub = "Distancia euclÃ­dea", k_color = "black") +
  theme(plot.title =  element_text(hjust = 0.5, size = 15)) + 
  geom_hline(yintercept = 4.85, linetype = "dashed") 
dev.off()

#Nos dice el centro de cada cluster
center <- as.data.frame(cluster2030h$centers)

centro_cluster2030h <- data.frame(row.names = c(1:5))
for(j in 1:18){
  prueba <- data.frame(row.names = c(1:5), 
                       j = cluster2030h$centers[,j]*mean_SD$sd$`2030`[j,1]+mean_SD$mean$`2030`[j,1]) 
  centro_cluster2030h <- cbind(centro_cluster2030h, prueba)
}
names(centro_cluster2030h) <- indica
centro_cluster2030h

#Visualizar rÃ¡pidamente el centro de cada cluster 
data.frame(t(centro_cluster2030h))

#Ahora vamos a obtener el mÃ­nimo y el mÃ¡ximo de cada cluster 
val.cluster2030h <- data.frame(shombres2030, cluster = cluster2030h$cluster)
min_cluster <- max_cluster <- NULL
for(cl in 1:5){
  minimo <- apply(val.cluster2030h[val.cluster2030h$cluster == cl,], 2, min) *
    c(mean_SD$sd$`2030`[,1], 1) + c(mean_SD$mean$`2030`[,1], 0)
  min_cluster <- rbind(minimo, min_cluster)
  
  maximo <- apply(val.cluster2030h[val.cluster2030h$cluster == cl,], 2, max) *
    c(mean_SD$sd$`2030`[,1], 1) + c(mean_SD$mean$`2030`[,1], 0)
  max_cluster <- rbind(maximo, max_cluster)
}

min_cluster <- data.frame(row.names = c(5:1), min_cluster)
max_cluster <- data.frame(row.names = c(5:1), max_cluster)

data.frame(t(min_cluster))
data.frame(t(max_cluster))

#Ahora por Ãºltimo vamos a calcular cuÃ¡l es el paÃ­s mÃ¡s cercano al centro del cluster
pais_centro <- NULL
for(cl in 1:5){
  ncluster <- length(val.cluster2030h[val.cluster2030h$cluster == cl,][,1]) 
  trey <- NULL
  for(j in 1:ncluster){
    rey <- abs(val.cluster2030h[val.cluster2030h$cluster == cl,][j,] - c(cluster2030h$centers[cl,],0))
    trey <- rbind(trey, rey)
    minimos <- apply(trey, 1, sum)
    cluj <- names(which(minimos == min(minimos), arr.ind=TRUE))
  }
  pais_centro <- c(pais_centro, cluj)
}

#Ver que paÃ­s ocupa cada cluster
data.frame(sort(cluster1990h$cluster)) 
data.frame(sort(cluster2010h$cluster))
data.frame(sort(cluster2030h$cluster))

##############################################################################
#MOSTRAR MAPAS DE LOS CLUSTERS
##############################################################################
#Cargar datos de Excel en R para configurar clusters
clusters <- read.table(file = "Clusterhombres.txt", header=TRUE)
latitude <- read.table(file = "Longitud_Latitud.txt", header=TRUE)


library("rnaturalearth")
library("rnaturalearthdata")
library("sf")
library(cowplot)
library(googleway)
library(ggplot2)
library(ggrepel)
library(ggspatial)
library(rgeos)

world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
#Latitude y Longuitud unida con cada paÃ­s
centers <- data.frame(row.names = world$name_long, name = world$name_long,
                      longitude = latitude$Lon, latitude = latitude$Lat)

#Centers 1990 
centers1990 <- NULL
centers1990 <- centers[centers$name == "Finland",] 
centers1990 <- rbind(centers1990, centers[centers$name == "Colombia",])
centers1990 <- rbind(centers1990, centers[centers$name == "Afghanistan",])
centers1990 <- rbind(centers1990, centers[centers$name == "Iraq",])
centers1990 <- rbind(centers1990, centers[centers$name == "Uganda",])

#Centers 2010 
centers2010 <- NULL
centers2010 <- centers[centers$name == "Luxembourg",] 
centers2010 <- rbind(centers2010, centers[centers$name == "Latvia",])
centers2010 <- rbind(centers2010, centers[centers$name == "Mexico",])
centers2010 <- rbind(centers2010, centers[centers$name == "Uganda",])
centers2010 <- rbind(centers2010, centers[centers$name == "Bangladesh",])

#Centers 2030 
centers2030 <- NULL
centers2030 <- centers[centers$name == "United Kingdom",] 
centers2030 <- rbind(centers2030, centers[centers$name == "Belgium",])
centers2030 <- rbind(centers2030, centers[centers$name == "Brazil",])
centers2030 <- rbind(centers2030, centers[centers$name == "Kenya",])
centers2030 <- rbind(centers2030, centers[centers$name == "Indonesia",])

#Ahora una vez que tengo los centros creados, voy a generar una 
#columna para cada cluster
world$h1990 <- clusters$h1990 
world$h2010 <- clusters$h2010 
world$h2030 <- clusters$h2030 

#Mapa del Mundo 
#Vamos a colorear el mapa
png("MapaMundo1990hombres.png")
ggplot(data = world) +
  geom_sf(aes(fill = h1990)) +
  scale_fill_viridis(option="E", na.value="white") +
  labs(fill = "Cluster") +
  geom_point(data = centers1990, aes(x = longitude, y = latitude), size = 2, 
             shape = 19, col = "green") + 
  theme(legend.position = "bottom", 
        axis.title.x=element_blank(),
        axis.title.y=element_blank())
dev.off()

png("MapaMundo2010hombres.png")
ggplot(data = world) +
  geom_sf(aes(fill = h2010)) +
  scale_fill_viridis(option="E", na.value="white") +
  labs(fill = "Cluster") +
  geom_point(data = centers2010, aes(x = longitude, y = latitude), size = 2, 
             shape = 19, col = "green") + 
  theme(legend.position = "bottom", 
        axis.title.x=element_blank(),
        axis.title.y=element_blank())
dev.off()

png("MapaMundo2030hombres.png")
ggplot(data = world) +
  geom_sf(aes(fill = h2030)) +
  scale_fill_viridis(option="E", na.value="white") +
  labs(fill = "Cluster") +
  geom_point(data = centers2030, aes(x = longitude, y = latitude), size = 2, 
             shape = 19, col = "green") + 
  theme(legend.position = "bottom", 
        axis.title.x=element_blank(),
        axis.title.y=element_blank())
dev.off()


png("Elbow1990hombres.png")
fviz_nbclust(x = shombres1990, FUNcluster = kmeans, method = "wss", k.max = 15,
             diss = dist(shombres1990, method = "manhattan"))
dev.off()

png("Elbow2010hombres.png")
fviz_nbclust(x = shombres2010, FUNcluster = kmeans, method = "wss", k.max = 15,
             diss = dist(shombres2010, method = "manhattan"))
dev.off()

png("Elbow2030hombres.png")
fviz_nbclust(x = shombres2030, FUNcluster = kmeans, method = "wss", k.max = 15,
             diss = dist(shombres2030, method = "manhattan"))
dev.off()



png("Elbow1990mujeres.png")
fviz_nbclust(x = smujeres1990, FUNcluster = kmeans, method = "wss", k.max = 15,
             diss = dist(smujeres1990, method = "manhattan"))
dev.off()

png("Elbow2010mujeres.png")
fviz_nbclust(x = smujeres2010, FUNcluster = kmeans, method = "wss", k.max = 15,
             diss = dist(smujeres2010, method = "manhattan"))
dev.off()

png("Elbow2030mujeres.png")
fviz_nbclust(x = smujeres2030, FUNcluster = kmeans, method = "wss", k.max = 15,
             diss = dist(smujeres2030, method = "manhattan"))
dev.off()


#############################################################################
#MUJERES
##################################################################
#MUJERES 1990 
##################################################################
set.seed(12345)
#MÃ©todo Average silhouette method --- nÃºmero de clusters optimo
png("Num.Clus.mujeres1990.png")
fviz_nbclust(x = smujeres1990, FUNcluster = kmeans, method = "silhouette", k.max = 15) +
  labs(title = "") + 
  xlab("NÃºmero de clusters") +
  ylab("")
dev.off()
ncluster1990m <- NbClust(data = smujeres1990, distance = "euclidean", min.nc = 2,
                         max.nc = 10, method = "kmeans", index = "alllong")

#HIERARCHICAL K-MEANS CLUSTERING
cluster1990m <- hkmeans(x = smujeres1990, hc.metric = "euclidean",
                        hc.method = "average", k = 4)
png("Dendograma1.mujeres1990.png")
fviz_dend(x = cluster1990m, cex = 0.4, main = "Linkage Average",
          sub = "Distancia euclÃ­dea", horiz = TRUE, k_colors = "black") +
  theme(plot.title =  element_text(hjust = 0.5, size = 15)) + 
  geom_hline(yintercept = 4, linetype = "dashed") 
dev.off()
png("Dendograma2.mujeres1990.png")
fviz_dend(x = cluster1990m, k = 4, cex = 0.4, main = "Linkage Average",
          sub = "Distancia euclÃ­dea", k_colors = "black") +
  theme(plot.title =  element_text(hjust = 0.5, size = 15)) + 
  geom_hline(yintercept = 4, linetype = "dashed") 
dev.off()

#Nos dice el centro de cada cluster
center <- as.data.frame(cluster1990m$centers)

centro_cluster1990m <- data.frame(row.names = c(1:4))
for(j in 1:18){
  prueba <- data.frame(row.names = c(1:4), 
                       j = cluster1990m$centers[,j]*mean_SD$sd$`1990`[j,2]+mean_SD$mean$`1990`[j,2]) 
  centro_cluster1990m <- cbind(centro_cluster1990m, prueba)
}
names(centro_cluster1990m) <- indica
centro_cluster1990m

#Visualizar rÃ¡pidamente el centro de cada cluster 
data.frame(t(centro_cluster1990m))

#Ahora vamos a obtener el mÃ­nimo y el mÃ¡ximo de cada cluster 
val.cluster1990m <- data.frame(smujeres1990, cluster = cluster1990m$cluster)
min_cluster <- max_cluster <- NULL
for(cl in 1:4){
  minimo <- apply(val.cluster1990m[val.cluster1990m$cluster == cl,], 2, min) *
    c(mean_SD$sd$`1990`[,2], 1) + c(mean_SD$mean$`1990`[,2], 0)
  min_cluster <- rbind(minimo, min_cluster)
  
  maximo <- apply(val.cluster1990m[val.cluster1990m$cluster == cl,], 2, max) *
    c(mean_SD$sd$`1990`[,2], 1) + c(mean_SD$mean$`1990`[,2], 0)
  max_cluster <- rbind(maximo, max_cluster)
}

min_cluster <- data.frame(row.names = c(4:1), min_cluster)
max_cluster <- data.frame(row.names = c(4:1), max_cluster)

data.frame(t(min_cluster))
data.frame(t(max_cluster))

#Ahora por Ãºltimo vamos a calcular cuÃ¡l es el paÃ­s mÃ¡s cercano al centro del cluster
pais_centro <- NULL
for(cl in 1:4){
  ncluster <- length(val.cluster1990m[val.cluster1990m$cluster == cl,][,1]) 
  trey <- NULL
  for(j in 1:ncluster){
    rey <- abs(val.cluster1990m[val.cluster1990m$cluster == cl,][j,] - c(cluster1990m$centers[cl,],0))
    trey <- rbind(trey, rey)
    minimos <- apply(trey, 1, sum)
    cluj <- names(which(minimos == min(minimos), arr.ind=TRUE))
  }
  pais_centro <- c(pais_centro, cluj)
}

##################################################################
#mujeres 2010 
##################################################################
#MÃ©todo Average silhouette method --- nÃºmero de clusters optimo
set.seed(12345)
png("Num.Clus.mujeres2010.png")
fviz_nbclust(x = smujeres2010, FUNcluster = kmeans, method = "silhouette", k.max = 15) +
  labs(title = "") + 
  xlab("NÃºmero de clusters") +
  ylab("")
dev.off()
ncluster2010m <- NbClust(data = smujeres2010, distance = "euclidean", min.nc = 2,
                         max.nc = 10, method = "kmeans", index = "alllong")

#HIERARCHICAL K-MEANS CLUSTERING
cluster2010m <- hkmeans(x = smujeres2010, hc.metric = "euclidean",
                        hc.method = "average", k = 4)
png("Dendograma1.mujeres2010.png")
fviz_dend(x = cluster2010m, k = 4, cex = 0.5, main = "Linkage Average",
          sub = "Distancia euclÃ­dea", horiz = TRUE, k_colors = "black") +
  theme(plot.title =  element_text(hjust = 0.5, size = 15)) + 
  geom_hline(yintercept = 4.3, linetype = "dashed") 
dev.off()
png("Dendograma2.mujeres2010.png")
fviz_dend(x = cluster2010m, k = 4, cex = 0.5, main = "Linkage Average",
          sub = "Distancia euclÃ­dea", k_color = "black") +
  theme(plot.title =  element_text(hjust = 0.5, size = 15)) + 
  geom_hline(yintercept = 4.3, linetype = "dashed") 
dev.off()

#Nos dice el centro de cada cluster
center <- as.data.frame(cluster2010m$centers)

centro_cluster2010m <- data.frame(row.names = c(1:4))
for(j in 1:18){
  prueba <- data.frame(row.names = c(1:4), 
                       j = cluster2010m$centers[,j]*mean_SD$sd$`2010`[j,2]+mean_SD$mean$`2010`[j,2]) 
  centro_cluster2010m <- cbind(centro_cluster2010m, prueba)
}
names(centro_cluster2010m) <- indica
centro_cluster2010m

#Visualizar rÃ¡pidamente el centro de cada cluster 
data.frame(t(centro_cluster2010m))

#Ahora vamos a obtener el mÃ­nimo y el mÃ¡ximo de cada cluster 
val.cluster2010m <- data.frame(smujeres2010, cluster = cluster2010m$cluster)
min_cluster <- max_cluster <- NULL
for(cl in 1:4){
  minimo <- apply(val.cluster2010m[val.cluster2010m$cluster == cl,], 2, min) *
    c(mean_SD$sd$`2010`[,2], 1) + c(mean_SD$mean$`2010`[,2], 0)
  min_cluster <- rbind(minimo, min_cluster)
  
  maximo <- apply(val.cluster2010m[val.cluster2010m$cluster == cl,], 2, max) *
    c(mean_SD$sd$`2010`[,2], 1) + c(mean_SD$mean$`2010`[,2], 0)
  max_cluster <- rbind(maximo, max_cluster)
}

min_cluster <- data.frame(row.names = c(4:1), min_cluster)
max_cluster <- data.frame(row.names = c(4:1), max_cluster)

data.frame(t(min_cluster))
data.frame(t(max_cluster))

#Ahora por Ãºltimo vamos a calcular cuÃ¡l es el paÃ­s mÃ¡s cercano al centro del cluster
pais_centro <- NULL
for(cl in 1:4){
  ncluster <- length(val.cluster2010m[val.cluster2010m$cluster == cl,][,1]) 
  trey <- NULL
  for(j in 1:ncluster){
    rey <- abs(val.cluster2010m[val.cluster2010m$cluster == cl,][j,] - c(cluster2010m$centers[cl,],0))
    trey <- rbind(trey, rey)
    minimos <- apply(trey, 1, sum)
    cluj <- names(which(minimos == min(minimos), arr.ind=TRUE))
  }
  pais_centro <- c(pais_centro, cluj)
}

##################################################################
#mujeres 2030 
##################################################################
#MÃ©todo Average silhouette method --- nÃºmero de clusters optimo
png("Num.Clus.mujeres2030.png")
fviz_nbclust(x = smujeres2030, FUNcluster = kmeans, method = "silhouette", k.max = 15) +
  labs(title = "") + 
  xlab("NÃºmero de clusters") +
  ylab("")
dev.off()
ncluster2030m <- NbClust(data = smujeres2030, distance = "euclidean", min.nc = 2,
                         max.nc = 10, method = "kmeans", index = "alllong")

#HIERARCHICAL K-MEANS CLUSTERING
cluster2030m <- hkmeans(x = smujeres2030, hc.metric = "euclidean",
                        hc.method = "average", k = 4)
png("Dendograma1.mujeres2030.png")
fviz_dend(x = cluster2030m, k = 4, cex = 0.5, main = "Linkage Average",
          sub = "Distancia euclÃ­dea", horiz = TRUE, k_color = "black") +
  theme(plot.title =  element_text(hjust = 0.5, size = 15)) + 
  geom_hline(yintercept = 4.25, linetype = "dashed") 
dev.off()
png("Dendograma2.mujeres2030.png")
fviz_dend(x = cluster2030m, k = 4, cex = 0.5, main = "Linkage Average",
          sub = "Distancia euclÃ­dea", k_color = "black") +
  theme(plot.title =  element_text(hjust = 0.5, size = 15)) + 
  geom_hline(yintercept = 4.25, linetype = "dashed") 
dev.off()

#Nos dice el centro de cada cluster
center <- as.data.frame(cluster2030m$centers)

centro_cluster2030m <- data.frame(row.names = c(1:4))
for(j in 1:18){
  prueba <- data.frame(row.names = c(1:4), 
                       j = cluster2030m$centers[,j]*mean_SD$sd$`2030`[j,2]+mean_SD$mean$`2030`[j,2]) 
  centro_cluster2030m <- cbind(centro_cluster2030m, prueba)
}
names(centro_cluster2030m) <- indica
centro_cluster2030m

#Visualizar rÃ¡pidamente el centro de cada cluster 
data.frame(t(centro_cluster2030m))

#Ahora vamos a obtener el mÃ­nimo y el mÃ¡ximo de cada cluster 
val.cluster2030m <- data.frame(smujeres2030, cluster = cluster2030m$cluster)
min_cluster <- max_cluster <- NULL
for(cl in 1:4){
  minimo <- apply(val.cluster2030m[val.cluster2030m$cluster == cl,], 2, min) *
    c(mean_SD$sd$`2030`[,2], 1) + c(mean_SD$mean$`2030`[,2], 0)
  min_cluster <- rbind(minimo, min_cluster)
  
  maximo <- apply(val.cluster2030m[val.cluster2030m$cluster == cl,], 2, max) *
    c(mean_SD$sd$`2030`[,2], 1) + c(mean_SD$mean$`2030`[,2], 0)
  max_cluster <- rbind(maximo, max_cluster)
}

min_cluster <- data.frame(row.names = c(4:1), min_cluster)
max_cluster <- data.frame(row.names = c(4:1), max_cluster)

data.frame(t(min_cluster))
data.frame(t(max_cluster))

#Ahora por Ãºltimo vamos a calcular cuÃ¡l es el paÃ­s mÃ¡s cercano al centro del cluster
pais_centro <- NULL
for(cl in 1:4){
  ncluster <- length(val.cluster2030m[val.cluster2030m$cluster == cl,][,1]) 
  trey <- NULL
  for(j in 1:ncluster){
    rey <- abs(val.cluster2030m[val.cluster2030m$cluster == cl,][j,] - c(cluster2030m$centers[cl,],0))
    trey <- rbind(trey, rey)
    minimos <- apply(trey, 1, sum)
    cluj <- names(which(minimos == min(minimos), arr.ind=TRUE))
  }
  pais_centro <- c(pais_centro, cluj)
}

#Ver que paÃ­s ocupa cada cluster
data.frame(sort(cluster1990m$cluster)) 
data.frame(sort(cluster2010m$cluster))
data.frame(sort(cluster2030m$cluster))

##############################################################################
#MOSTRAR MAPAS DE LOS CLUSTERS
##############################################################################
#Cargar datos de Excel en R para configurar clusters
clusters <- read.table(file = "Clustermujeres.txt", header=TRUE)
latitude <- read.table(file = "Longitud_Latitud.txt", header=TRUE)


library("rnaturalearth")
library("rnaturalearthdata")
library("sf")
library(cowplot)
library(googleway)
library(ggplot2)
library(ggrepel)
library(ggspatial)
library(libwgeom)
library(rgeos)

world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
#Latitude y Longuitud unida con cada paÃ­s
centers <- data.frame(row.names = world$name_long, name = world$name_long,
                      longitude = latitude$Lon, latitude = latitude$Lat)
#Centers 1990 
centers1990 <- NULL
centers1990 <- centers[centers$name == "Germany",] 
centers1990 <- rbind(centers1990, centers[centers$name == "Cuba",])
centers1990 <- rbind(centers1990, centers[centers$name == "Afghanistan",])
centers1990 <- rbind(centers1990, centers[centers$name == "Algeria",])

#Centers 2010 
centers2010 <- NULL
centers2010 <- centers[centers$name == "Chile",] 
centers2010 <- rbind(centers2010, centers[centers$name == "Afghanistan",])
centers2010 <- rbind(centers2010, centers[centers$name == "China",])
centers2010 <- rbind(centers2010, centers[centers$name == "Mozambique",])
centers2010 <- rbind(centers2010, centers[centers$name == "Nigeria",])

#Centers 2030 
centers2030 <- NULL
centers2030 <- centers[centers$name == "Estonia",] 
centers2030 <- rbind(centers2030, centers[centers$name == "Brazil",])
centers2030 <- rbind(centers2030, centers[centers$name == "Myanmar",])
centers2030 <- rbind(centers2030, centers[centers$name == "South Africa",])

#Ahora una vez que tengo los centros creados, voy a generar una 
#columna para cada cluster
world$h1990 <- clusters$m1990 
world$h2010 <- clusters$m2010 
world$h2030 <- clusters$m2030 

#Mapa del Mundo 
#Vamos a colorear el mapa
png("MapaMundo1990mujeres.png")
ggplot(data = world) +
  geom_sf(aes(fill = h1990)) +
  scale_fill_viridis(option="E", na.value="white") +
  labs(fill = "Cluster") +
  geom_point(data = centers1990, aes(x = longitude, y = latitude), size = 2, 
             shape = 19, col = "green") + 
  theme(legend.position = "bottom", 
        axis.title.x=element_blank(),
        axis.title.y=element_blank())
dev.off()

png("MapaMundo2010mujeres.png")
ggplot(data = world) +
  geom_sf(aes(fill = h2010)) +
  scale_fill_viridis(option="E", na.value="white") +
  labs(fill = "Cluster") +
  geom_point(data = centers2010, aes(x = longitude, y = latitude), size = 2, 
             shape = 19, col = "green") + 
  theme(legend.position = "bottom", 
        axis.title.x=element_blank(),
        axis.title.y=element_blank())
dev.off()

png("MapaMundo2030mujeres.png")
ggplot(data = world) +
  geom_sf(aes(fill = h2030)) +
  scale_fill_viridis(option="E", na.value="white") +
  labs(fill = "Cluster") +
  geom_point(data = centers2030, aes(x = longitude, y = latitude), size = 2, 
             shape = 19, col = "green") + 
  theme(legend.position = "bottom", 
        axis.title.x=element_blank(),
        axis.title.y=element_blank())
dev.off()
